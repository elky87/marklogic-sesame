buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven{ url "https://plugins.gradle.org/m2/"}
        maven {url "http://developer.marklogic.com/maven2/"}
    }
    dependencies {
        classpath "gradle.plugin.com.marklogic:ml-gradle:2.4.0"
    }
}

apply plugin: "com.marklogic.ml-gradle"
apply plugin: 'eclipse'
//apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'jacoco'
jacoco{toolVersion="0.7.4.201502262128"}

compileJava.options.encoding = 'UTF-8'

configure(allprojects){
            ext.slf4jVersion = '1.7.2'
            ext.logbackVersion = '1.0.9'
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

repositories {
    mavenLocal()
    mavenCentral()
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
}

dependencies {
    compile('org.openrdf.sesame:sesame-runtime:2.8.10')

//    compile('com.marklogic:java-client-api:3.0-SNAPSHOT') {
//        exclude(group: 'org.slf4j')
//        exclude(group: 'ch.qos.logback')
//    }

    // for the bleeding edge switch to com.marklogic:java-client-api:4.0-SNAPSHOT

    compile('com.marklogic:java-client-api:3.0.6') {
        exclude(group: 'org.slf4j')
        exclude(group: 'ch.qos.logback')
    }
    compile('org.slf4j:slf4j-api:1.7.10')
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"

    testCompile 'com.jayway.restassured:rest-assured:2.4.1'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.12'
}

sourceSets {
    test {
        java {
            srcDir 'main/test/java'
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

javadoc {
    options.overview = "src/main/java/com/marklogic/semantics/sesame/overview.html"
}

Node pomCustomizations = new NodeBuilder(). project {
        name 'marklogic-sesame'
        packaging 'jar'
        textdescription 'Adapter for using MarkLogic with the Sesame Framework'
        url 'https://github.com/marklogic/marklogic-sesame'

        scm {
            url 'git@github.com:marklogic/marklogic-sesame.git'
                connection 'scm:git@github.com:marklogic/marklogic-sesame.git'
                developerConnection 'scm:git@github.com:marklogic/marklogic-sesame.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }

        developers {
            developer {
                name 'MarkLogic'
                    email 'java-sig@marklogic.com'
                    organization 'MarkLogic'
                    organizationUrl 'https://www.marklogic.com'
            }
            developer {
                name 'MarkLogic Github Contributors'
                    email 'general@developer.marklogic.com'
                    organization 'Github Contributors'
                    organizationUrl 'https://github.com/marklogic/marklogic-sesame/graphs/contributors'
            }
        }
}

publishing {
  publications {
    mainJava(MavenPublication) {
      from components.java

      pom.withXml {
        asNode().append(pomCustomizations.developers)
        asNode().append(pomCustomizations.name)
        asNode().append(pomCustomizations.packaging)
        asNode().append(pomCustomizations.url)
        asNode().append(pomCustomizations.scm)
        asNode().append(pomCustomizations.licenses)
        asNode().appendNode("description",pomCustomizations.textdescription.text())
      }

      artifact sourcesJar

      artifact javadocJar

    }
  }
  repositories {
    maven {
      url publishUrl
    }
  }
}
